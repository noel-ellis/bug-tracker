name: Build and Deploy Code

on: [push, pull_request]

env:
  DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
  DATABASE_PORT: ${{secrets.DATABASE_PORT}}
  DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
  DATABASE_NAME: ${{secrets.DATABASE_NAME}}
  DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
  SECRET_KEY: ${{secrets.SECRET_KEY}}
  ALGORITHM: ${{secrets.ALGORITHM}}
  ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_REPOSITORY_NAME: ${{secrets.DOCKER_HUB_REPOSITORY_NAME}}

  # HEROKU SECRETS
  HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
  HEROKU_APP_NAME: ${{secrets.HEROKU_APP_NAME}}
  HEROKU_EMAIL: ${{secrets.HEROKU_EMAIL}}

jobs:
  build:
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3

      - name: install python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' 

      - name: update pip
        run: python -m pip install --upgrade pip

      - name: install dependencies
        run: pip install -r requirements.txt

      - name: pytest testing
        run: |
          pip install pytest
          pytest

      # DOCKER
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{secrets.DOCKER_HUB_REPOSITORY_NAME}}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{secrets.DOCKER_HUB_REPOSITORY_NAME}}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{secrets.DOCKER_HUB_REPOSITORY_NAME}}:buildcache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: [build]

    steps: 
      - name: pulling git repo
        uses: actions/checkout@v3
        
        # HEROKU
      - name: deploying to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}

    
